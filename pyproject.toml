[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "ai-cop-mcp-demo"
dynamic = ["version"]
description = 'MCP Server for Regulations.gov API '
readme = "README.md"
requires-python = ">=3.10"
license = "MIT"
keywords = []
authors = [
  { name = "Samuel Levy", email = "heysamlevy@gmail.com" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = [
    "fastmcp>=2.12.2",
    "httpx>=0.28.1",
    "pydantic>=2.11.7",
    "python-dotenv>=1.1.1",
    "ruff>=0.12.12",
]

[project.urls]
Documentation = "https://github.com/Samuel Levy/ai-cop-mcp-demo#readme"
Issues = "https://github.com/Samuel Levy/ai-cop-mcp-demo/issues"
Source = "https://github.com/Samuel Levy/ai-cop-mcp-demo"

[project.scripts]
ai-cop-mcp-demo = "ai_cop_mcp_demo.server:main"

[tool.hatch.version]
path = "src/ai_cop_mcp_demo/__about__.py"

[tool.hatch.envs.types]
extra-dependencies = [
  "mypy>=1.0.0",
]
[tool.hatch.envs.types.scripts]
check = "mypy --install-types --non-interactive {args:src/ai_cop_mcp_demo tests}"

[tool.coverage.run]
source_pkgs = ["ai_cop_mcp_demo", "tests"]
branch = true
parallel = true
omit = [
  "src/ai_cop_mcp_demo/__about__.py",
]

[tool.coverage.paths]
ai_cop_mcp_demo = ["src/ai_cop_mcp_demo", "*/ai-cop-mcp-demo/src/ai_cop_mcp_demo"]
tests = ["tests", "*/ai-cop-mcp-demo/tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]
